# docker compose version 2.1+

version: '1'
services:
  flyway_migration:
    container_name: flyway_migration_for_tg
    image: flyway/flyway:9
    command: -url=jdbc:postgresql://db:5432/${POSTGRES_DBNAME} -user=${POSTGRES_USER} -password=${POSTGRES_PASS} migrate
    volumes:
      - ${PWD}/init/migrations:/flyway/sql
    depends_on:
      db:
        condition: service_healthy
  flyway_seed:
    container_name: flyway_seed_for_tg
    image: flyway/flyway:9
    command: -url=jdbc:postgresql://db:5432/${POSTGRES_DBNAME} -user=${POSTGRES_USER} -password=${POSTGRES_PASS} -outOfOrder="true" migrate
    volumes:
      - ${PWD}/init/seeds:/flyway/sql
    depends_on:
      flyway_migration:
        condition: service_completed_successfully
  db:
    container_name: db_for_tg
    image: postgres:latest
    restart: always
    ports:
    - "${POSTGRES_PORT}:5432"
    environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASS}
    - POSTGRES_DB=${POSTGRES_DBNAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 3s
      timeout: 2s
      retries: 10
  bot:
    container_name: tg
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - POSTGRES_DBNAME=${POSTGRES_DBNAME}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - APP_ENV=develop
    depends_on:
      flyway_seed:
        condition: service_completed_successfully